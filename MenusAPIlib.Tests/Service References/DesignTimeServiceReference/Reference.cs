//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MenusAPIlib.Tests.DesignTimeServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DesignTimeServiceReference.IMenusService")]
    public interface IMenusService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenusService/ResetDatabase", ReplyAction="http://tempuri.org/IMenusService/ResetDatabaseResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MenusAPI.ReadObjectsReply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MenusAPI.AuthenticateUserReply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MenusAPI.CUDOperationsReply))]
        MenusAPI.APIReply ResetDatabase(MenusAPI.ResetDatabaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenusService/IsDatabaseUp", ReplyAction="http://tempuri.org/IMenusService/IsDatabaseUpResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MenusAPI.ReadObjectsReply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MenusAPI.AuthenticateUserReply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MenusAPI.CUDOperationsReply))]
        MenusAPI.APIReply IsDatabaseUp(MenusAPI.IsDatabaseUpRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenusService/AuthenticateUser", ReplyAction="http://tempuri.org/IMenusService/AuthenticateUserResponse")]
        MenusAPI.AuthenticateUserReply AuthenticateUser(MenusAPI.AuthenticateUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenusService/LogoutUser", ReplyAction="http://tempuri.org/IMenusService/LogoutUserResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MenusAPI.ReadObjectsReply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MenusAPI.AuthenticateUserReply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MenusAPI.CUDOperationsReply))]
        MenusAPI.APIReply LogoutUser(MenusAPI.LogoutUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenusService/CreateNewAccount", ReplyAction="http://tempuri.org/IMenusService/CreateNewAccountResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MenusAPI.ReadObjectsReply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MenusAPI.AuthenticateUserReply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MenusAPI.CUDOperationsReply))]
        MenusAPI.APIReply CreateNewAccount(MenusAPI.CreateNewAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenusService/CUDUsers", ReplyAction="http://tempuri.org/IMenusService/CUDUsersResponse")]
        MenusAPI.CUDOperationsReply CUDUsers(MenusAPI.CUDUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenusService/CUDMenus", ReplyAction="http://tempuri.org/IMenusService/CUDMenusResponse")]
        MenusAPI.CUDOperationsReply CUDMenus(MenusAPI.CUDMenusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenusService/CUDRoles", ReplyAction="http://tempuri.org/IMenusService/CUDRolesResponse")]
        MenusAPI.CUDOperationsReply CUDRoles(MenusAPI.CUDRolesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenusService/ReadLog", ReplyAction="http://tempuri.org/IMenusService/ReadLogResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MenusAPI.AuthenticateUserReply))]
        MenusAPI.ReadObjectsReply ReadLog(MenusAPI.ReadLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenusService/ReadMenus", ReplyAction="http://tempuri.org/IMenusService/ReadMenusResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MenusAPI.AuthenticateUserReply))]
        MenusAPI.ReadObjectsReply ReadMenus(MenusAPI.ReadMenusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenusService/ReadUsers", ReplyAction="http://tempuri.org/IMenusService/ReadUsersResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MenusAPI.AuthenticateUserReply))]
        MenusAPI.ReadObjectsReply ReadUsers(MenusAPI.ReadUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenusService/ReadRoles", ReplyAction="http://tempuri.org/IMenusService/ReadRolesResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MenusAPI.AuthenticateUserReply))]
        MenusAPI.ReadObjectsReply ReadRoles(MenusAPI.ReadRolesRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMenusServiceChannel : MenusAPIlib.Tests.DesignTimeServiceReference.IMenusService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MenusServiceClient : System.ServiceModel.ClientBase<MenusAPIlib.Tests.DesignTimeServiceReference.IMenusService>, MenusAPIlib.Tests.DesignTimeServiceReference.IMenusService {
        
        public MenusServiceClient() {
        }
        
        public MenusServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MenusServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MenusServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MenusServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MenusAPI.APIReply ResetDatabase(MenusAPI.ResetDatabaseRequest request) {
            return base.Channel.ResetDatabase(request);
        }
        
        public MenusAPI.APIReply IsDatabaseUp(MenusAPI.IsDatabaseUpRequest request) {
            return base.Channel.IsDatabaseUp(request);
        }
        
        public MenusAPI.AuthenticateUserReply AuthenticateUser(MenusAPI.AuthenticateUserRequest request) {
            return base.Channel.AuthenticateUser(request);
        }
        
        public MenusAPI.APIReply LogoutUser(MenusAPI.LogoutUserRequest request) {
            return base.Channel.LogoutUser(request);
        }
        
        public MenusAPI.APIReply CreateNewAccount(MenusAPI.CreateNewAccountRequest request) {
            return base.Channel.CreateNewAccount(request);
        }
        
        public MenusAPI.CUDOperationsReply CUDUsers(MenusAPI.CUDUsersRequest request) {
            return base.Channel.CUDUsers(request);
        }
        
        public MenusAPI.CUDOperationsReply CUDMenus(MenusAPI.CUDMenusRequest request) {
            return base.Channel.CUDMenus(request);
        }
        
        public MenusAPI.CUDOperationsReply CUDRoles(MenusAPI.CUDRolesRequest request) {
            return base.Channel.CUDRoles(request);
        }
        
        public MenusAPI.ReadObjectsReply ReadLog(MenusAPI.ReadLogRequest request) {
            return base.Channel.ReadLog(request);
        }
        
        public MenusAPI.ReadObjectsReply ReadMenus(MenusAPI.ReadMenusRequest request) {
            return base.Channel.ReadMenus(request);
        }
        
        public MenusAPI.ReadObjectsReply ReadUsers(MenusAPI.ReadUsersRequest request) {
            return base.Channel.ReadUsers(request);
        }
        
        public MenusAPI.ReadObjectsReply ReadRoles(MenusAPI.ReadRolesRequest request) {
            return base.Channel.ReadRoles(request);
        }
    }
}
